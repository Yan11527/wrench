0:	input_addr
4:	output_addr
8:	_start
72:	end
---
mem[0..3]: 	80 00 00 00	@"input_addr"
mem[4..7]: 	84 00 00 00	@"output_addr"
mem[8..11]: 	MoveA {mode = Long, src = Immediate 0, dst = DirectAddrReg A6} 	@_start
mem[12..15]: 	MoveA {mode = Long, src = IndirectAddrReg 0 A6, dst = DirectAddrReg A6}
mem[16..19]: 	MoveA {mode = Long, src = Immediate 4, dst = DirectAddrReg A7}
mem[20..23]: 	MoveA {mode = Long, src = IndirectAddrReg 0 A7, dst = DirectAddrReg A7}
mem[24..27]: 	Move {mode = Long, src = IndirectAddrReg 0 A6, dst = DirectDataReg D5}
mem[28..31]: 	Lsl {mode = Long, src = Immediate 1, dst = DirectDataReg D5}
mem[32..35]: 	Move {mode = Long, src = DirectDataReg D5, dst = IndirectAddrReg 0 A7}
mem[36..39]: 	Move {mode = Long, src = IndirectAddrReg 0 A6, dst = DirectDataReg D5}
mem[40..43]: 	Lsr {mode = Long, src = Immediate 1, dst = DirectDataReg D5}
mem[44..47]: 	Move {mode = Long, src = DirectDataReg D5, dst = IndirectAddrReg 0 A7}
mem[48..51]: 	Move {mode = Long, src = IndirectAddrReg 0 A6, dst = DirectDataReg D5}
mem[52..55]: 	Asl {mode = Long, src = Immediate 1, dst = DirectDataReg D5}
mem[56..59]: 	Move {mode = Long, src = DirectDataReg D5, dst = IndirectAddrReg 0 A7}
mem[60..63]: 	Move {mode = Long, src = IndirectAddrReg 0 A6, dst = DirectDataReg D5}
mem[64..67]: 	Asr {mode = Long, src = Immediate 1, dst = DirectDataReg D5}
mem[68..71]: 	Move {mode = Long, src = DirectDataReg D5, dst = IndirectAddrReg 0 A7}
mem[72..75]: 	Halt 	@end
mem[76..999]: 	( 00 )
---
